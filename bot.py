from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, filters, \
    CallbackQueryHandler, CommandHandler, ContextTypes

from credentials import TelegramBot_TOKEN
from credentials import ChatGPT_TOKEN
from gpt import ChatGptService
from util import load_message, load_prompt, send_text_buttons, send_text, \
    send_image, show_main_menu, Dialog, default_callback_handler

# –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ chatGPT
chat_gpt = ChatGptService(ChatGPT_TOKEN)

# —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –±–æ—Ç–æ–º
app = ApplicationBuilder()\
    .token(TelegramBot_TOKEN)\
    .build()

# —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏ –ø—É—Å—Ç–æ–≥–æ –∫–ª–∞—Å—Å–∞ —Å –∑–∞–≥–ª—É—à–∫–æ–π, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –Ω–∞–º –∏–º–µ—Ç—å –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é.
dialog = Dialog()
dialog.mode = None
dialog.right_answers = None

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    dialog.mode = 'start'
    text = load_message('start')
    await send_image(update, context, 'start')
    await send_text(update, context, text)
    await show_main_menu(update, context, {
        'start': '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
        'random': '–£–∑–Ω–∞—Ç—å —Å–ª—É—á–∞–π–Ω—ã–π –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π —Ñ–∞–∫—Ç üß†',
        'gpt': '–ó–∞–¥–∞—Ç—å –≤–æ–ø—Ä–æ—Å —á–∞—Ç—É GPT ü§ñ',
        'talk': '–ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å —Å –∏–∑–≤–µ—Å—Ç–Ω–æ–π –ª–∏—á–Ω–æ—Å—Ç—å—é üë§',
        'quiz': '–ü–æ—É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–≤–∏–∑–µ ‚ùì'
        # –î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ –º–µ–Ω—é –º–æ–∂–Ω–æ —Ç–∞–∫:
        # 'command': 'button text'
    })


async def message_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ —Ä–∞–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param update:
    :param context:
    :return: None
    """
    if dialog.mode is None:
        await start(update, context)
    elif dialog.mode == 'gpt':
        await gpt_ask(update, context)
    elif dialog.mode == 'talk':
        await talk(update, context)
    elif dialog.mode == 'quiz':
        await quiz(update, context)
    else:
        await start(update, context)


async def random_fact(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /random –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç–∞ —Ä–∞–Ω–¥–æ–º–Ω–æ–≥–æ —Ñ–∞–∫—Ç–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ —á–∞—Ç–æ–º GPT
    :param update:
    :param context:
    :return: None
    """
    # –æ–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ —Ç–µ–∫—Å—Ç —Å —Ä–µ–∞–∫—Ü–∏–µ–π –Ω–∞ –∫–æ–º–∞–Ω–¥—É
    prompt = load_prompt('random')
    message = load_message('random')
    await send_image(update, context, 'random')
    message = await send_text(update, context, message)

    # –æ–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —á–∞—Ç–∞ GPT, –∏—Å–ø—Ä–∞–≤–ª—è—è –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    gpt_reply = await chat_gpt.send_question(prompt, '')
    await message.edit_text(gpt_reply)


async def gpt_mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç—Å—ã–ª–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø—Ä–æ—Å—å–±–æ–π –≤–≤–µ—Å—Ç–∏ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –∫ GPT
    :param update:
    :param context:
    :return: None
    """
    dialog.mode = 'gpt'
    message = load_message('gpt')
    await send_image(update, context, 'gpt')
    await send_text(update, context, message)


async def gpt_ask(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_text = update.message.text  # –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    prompt = load_prompt('gpt')  # –ø–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è —á–∞—Ç–∞ GPT
    gpt_reply = await chat_gpt.send_question(prompt, user_text)
    await send_text(update, context, gpt_reply)  # –æ—Ç—Å—ã–ª–∞–µ—Ç –æ—Ç–≤–µ—Ç GPT –≤ —á–∞—Ç


async def talk_mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /talk
    :param update:
    :param context:
    :return: None
    """
    dialog.mode = 'talk'
    message = load_message('talk')
    companions = {
        'talk_to_cobain': '–ö—É—Ä—Ç –ö–æ–±–µ–π–Ω üé∏',
        'talk_to_queen': '–ï–ª–∏–∑–∞–≤–µ—Ç–∞ II üëë',
        'talk_to_tolkien': '–î–∂–æ–Ω –¢–æ–ª–∫–∏–µ–Ω üìñ',
        'talk_to_nietzsche': '–§—Ä–∏–¥—Ä–∏—Ö –ù–∏—Ü—à–µ üß†',
        'talk_to_hawking': '–°—Ç–∏–≤–µ–Ω –•–æ–∫–∏–Ω–≥ üî¨',
    }
    await send_image(update, context, 'talk')
    await send_text_buttons(update, context, message, companions)

async def talk_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ –≤ —Ä–µ–∂–∏–º–µ talk
    :param update:
    :param context:
    :return:
    """
    await update.callback_query.answer()
    button = update.callback_query.data
    chat_gpt.set_prompt(button)  # –ø–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è —á–∞—Ç–∞ GPT
    await send_image(update, context, button)
    message = '–ö–æ–Ω—Ç–∞–∫—Å—Ç —Å –ª–∏—á–Ω–æ—Å—Ç—å—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –¥–∏–∞–ª–æ–≥'
    await send_text(update, context, message)  # –æ—Ç—Å—ã–ª–∞–µ—Ç –æ—Ç–≤–µ—Ç GPT –≤ —á–∞—Ç


async def talk(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —á–∞—Ç–æ–º GPT –≤ —Ä–µ–∂–∏–º–µ talk (–ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Å–æ–±–µ—Å–µ–¥–Ω–∏–∫–∞)
    :param update:
    :param context:
    :return:
    """
    user_text = update.message.text  # –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    prompt = load_prompt('gpt')  # –ø–æ–¥—Å–∫–∞–∑–∫–∞ –¥–ª—è —á–∞—Ç–∞ GPT
    gpt_reply = await chat_gpt.add_message(user_text)
    await send_text(update, context, gpt_reply)  # –æ—Ç—Å—ã–ª–∞–µ—Ç –æ—Ç–≤–µ—Ç GPT –≤ —á–∞—Ç

async def quiz_mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /quiz
    :param update:
    :param context:
    :return: None
    """
    dialog.mode = 'quiz'
    dialog.right_answers = 0
    message = load_message('quiz')
    topics = {
        'quiz_prog': '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ (Python)',
        'quiz_math': '–ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
        'quiz_biology': '–ë–∏–æ–ª–æ–≥–∏—è',
    }
    await send_image(update, context, 'quiz')
    await send_text_buttons(update, context, message, topics)


async def quiz_buttons(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫ –≤ —Ä–µ–∂–∏–º–µ quiz
    :param update:
    :param context:
    :return:
    """
    await update.callback_query.answer()
    button = update.callback_query.data
    if button == 'quiz_more':
        question = await chat_gpt.add_message(f'–°–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å {button}?')
        await send_text(update, context, question)  # –æ—Ç—Å—ã–ª–∞–µ—Ç –æ—Ç–≤–µ—Ç GPT –≤ —á–∞—Ç
    else:
        question = await chat_gpt.send_question('quiz', f'–Ø –≤—ã–±–∏—Ä–∞—é —ç—Ç—É —Ç–µ–º—É {button}. –ó–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å?')
        await send_text(update, context, question)  # –æ—Ç—Å—ã–ª–∞–µ—Ç –æ—Ç–≤–µ—Ç GPT –≤ —á–∞—Ç

async def quiz(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —á–∞—Ç–æ–º GPT –≤ —Ä–µ–∂–∏–º–µ quiz (–ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —Ç–µ–º—ã)
    :param update:
    :param context:
    :return:
    """
    user_text = update.message.text  # –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    one_more_question = '–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–µ–¥—É—é—â–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É'
    gpt_reply = await chat_gpt.add_message(user_text)
    if '–ü—Ä–∞–≤–∏–ª—å–Ω–æ' in gpt_reply or '–í–µ—Ä–Ω–æ' in gpt_reply:
        dialog.right_answers += 1
    await send_text(update, context, gpt_reply)  # –æ—Ç—Å—ã–ª–∞–µ—Ç –æ—Ç–≤–µ—Ç GPT –≤ —á–∞—Ç
    await send_text(update, context, f'–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ - {dialog.right_answers}')
    await send_text_buttons(update, context, one_more_question, {'quiz_more':'–î–∞–≤–∞–π —Å–ª–µ–¥—É—é—â–∏–π –≤–æ–ø—Ä–æ—Å'})

# –≤—ã–≤–æ–¥ –º–µ–Ω—é —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏
app.add_handler(CommandHandler('start', start))

# –ó–ê–î–ê–ß–ê 1. –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, message_handler))

# –ó–ê–î–ê–ß–ê 2. –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /random, –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–∞–Ω–¥–æ–º–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤
app.add_handler(CommandHandler('random', random_fact))

# –ó–ê–î–ê–ß–ê 3. –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /gpt, –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å chat GPT
app.add_handler(CommandHandler('gpt', gpt_mode))

# –ó–ê–î–ê–ß–ê 4. –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /talk, –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å chat GPT
app.add_handler(CommandHandler('talk', talk_mode))

# –ó–∞–¥–∞—á–∞ 4. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ä–µ–∂–∏–º–∞ talk
app.add_handler(CallbackQueryHandler(talk_buttons, pattern='^talk_to_.*'))

# –ó–ê–î–ê–ß–ê 5. –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –∫–æ–º–∞–Ω–¥—ã /quiz, –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å chat GPT
app.add_handler(CommandHandler('quiz', quiz_mode))

# –ó–∞–¥–∞—á–∞ 5. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Ä–µ–∂–∏–º–∞ quiz
app.add_handler(CallbackQueryHandler(quiz_buttons, pattern='^quiz_.*'))
'''
–∫–∞–º–∞–Ω–¥–∞ add_handler –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫:
MessageHandler - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –±–æ—Ç.
    - filters - —É–∫–∞–∑—ã–≤–∞–µ–º —Ñ–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è.
    - –≤—Ç–æ—Ä–æ–π –∞—Ä–≥—É–º–µ–Ω—Ç - –∫–æ—Ä—Ä—É—Ç–∏–Ω–∞, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –ø–æ—Å–ª–µ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
    –∫–æ—Ä—Ä—É—Ç–∏–Ω–∞ –¥–æ–ª–∂–Ω–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–Ω–∏–º–∞—Ç—å 2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞ (update: Update, context: ContextTypes.DEFAUL_TYPE)
CommandHandler - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã
CallbackQueryHandler -–æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫–∏.
'''

# –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –º–æ–∂–Ω–æ —Ç–∞–∫:
# app.add_handler(CommandHandler('command', handler_func))

# –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –º–æ–∂–Ω–æ —Ç–∞–∫:
# app.add_handler(CallbackQueryHandler(app_button, pattern='^app_.*'))
# app.add_handler(CallbackQueryHandler(default_callback_handler))

# –ú–µ—Ç–æ–¥, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –±–æ—Ç–∞
app.run_polling()
